[{"layout":"default","title":"LED-Camp 学習コンテンツ公開ページ","content":"\n# LED-Camp 学習コンテンツ公開ページ\n\n- [Camp9事前学習資料](camp9/pre_learning/index.md)","dir":"/","name":"index.md","path":"index.md","url":"/"},{"permalink":"/camp9/","layout":"default","title":"LED-Camp9","content":"# LED-Camp9\n\nsource: `{{ page.path }}`\n\n## サイトマップ\n{% include list.liquid all=true %}\n\n\n```\n{% raw %}{% include list.liquid all=true %}{% endraw %}\n\n{% include list.liquid all=true %}\n```\n","dir":"/camp9/","name":"README.md","path":"camp9/README.md","url":"/camp9/"},{"layout":"default","title":"はじめに","content":"# はじめに\nsource: `{{ page.path }}`\n\n## LED-Camp へようこそ！\nLED-Camp では、全国各地から様々な参加者が集まり、初対面同士でチームを作り、そして、ソフトウェアを開発します。わくわくしますね！\n\nですが、わくわくする一方で、不安を感じる方もいらっしゃるのではないでしょうか。\n\n## 「チームビルディング」セッションの目的\nLED-Camp の最初のセッションはチームビルディングです。このセッションの目的は、感じている不安をできるだけ軽くし、本来学ぶべきことに集中できるような状態することです。\n\n本セッションは、座学はほとんどありません。代わりに数多くのワークを実施します。事前にこのテキストを読み、LED-Camp 当日のワークに臨むことによって、これらワークの狙いや目的をより深く感じ取ることができると考えています。\n\n## 参加者のみなさんへのお願い\n参加者のみなさんにお願いがあります。\n\nまず、このテキストを「技術者の目」で読んでください。例えば、「なぜ自己紹介が必要なのか」、「なぜニックネームを書かねばならぬのか」など。批判的に読むことにより更に理解が深まります。\n\n次に、このテキストの内容を、**LED-Campで実践してください。**「チームビルディング」セッションはこのテキストに沿って進めます。しかし、セッションの中では細かい説明ができません。このテキストに書いてあることを思い出しながら自発的に行動してください。\n\n最後に、**LED-Camp終了後も実践してください。**自分のチーム（組織）でこのテキストに書いてあることと、体験したことを実践してください。実践したらどんな変化があったのか、逆に無かったのか、実行委員にこっそり教えてください。アドバイスできる範囲でお手伝いします。\n\n> 突然ですが、宿題があります。次のページで説明します。","dir":"/camp9/pre_learning/0_teambuilding/","name":"0_team_intro.md","path":"camp9/pre_learning/0_teambuilding/0_team_intro.md","url":"/camp9/pre_learning/0_teambuilding/0_team_intro.html"},{"layout":"default","title":"自己紹介ワーク","content":"# 自己紹介ワーク\nsource: `{{ page.path }}`\n\n「チームビルディング」セッション中に「自己紹介ワーク」を実施します。このため、LED-Camp 開始までに「四象限自己紹介」シートに記入してください。「四象限自己紹介」シートのテンプレートは以下から取得してください。\n\n[https://swest.toppers.jp/LED-Camp/report/camp7/camp7document/](https://swest.toppers.jp/LED-Camp/report/camp7/camp7document/)\n\n\n## 「四象限自己紹介」の説明\n「四象限自己紹介」とは何でしょうか。一般的な自己紹介と何が違うのでしょうか。\n\n「四象限自己紹介」には、氏名の他に三つの設問があります。この三つの設問が味噌です。これらの設問は、何らかの一つの軸に基づいた設問となっています。このことにより、より深い自己紹介ができるようになります。例えば、軸を時間とした場合、設問は以下の四つになります。\n\n<p><br></p>\n<p>例）</p>\n<table class=\"table table-bordered\">\n <tbody>\n <tr>\n <td width=\"50%\"><p>Ａ．氏名</p></td>\n <td width=\"50%\"><p>Ｃ．現在<br></p></td>\n </tr>\n <tr>\n <td><p>Ｂ．過去</p></td>\n <td><p>Ｄ．未来<br></p></td>\n </tr>\n </tbody>\n</table>\n<p><br></p>\n\n- 「過去」は、過去についての設問です。生まれた場所や、経歴などです。\n- 「現在」は、現在についての設問です。今やっている仕事や、マイブームなど。今、この瞬間の気持ちをきくこともあります。\n- 「未来」は、未来についての設問です。将来、何をしたいのか。自分はどうなりたいのか。夢は何か、などです。\n\n\nなお、宿題の「四象限自己紹介」シートでは時間を軸に、みなさんのLED-Camp に対する思いを紹介して欲しいと考えています。\n\n\n<p><br></p>\n<p style=\"text-align: center; margin-top: .5em\"><font color=\"#636363\">表. <font face=\"Impact\">LED-Camp</font> の「四象限自己紹介」の設問</font></p>\n\n<table class=\"table table-bordered\">\n <tbody>\n <tr>\n <td width=\"50%\">\n <p><b><u>Ａ．氏名、呼ばれたい名前(ニックネーム)、所属</u></b></p>\n <p>必要であれば、氏名や所属にふりがなを振ってください。</p>\n <p><br></p>\n </td>\n <td width=\"50%\">\n <p><b><u>Ｃ．今の感情</u></b></p><p>「意見」や「考え」ではなく「感情」です。<br>\n 例、わくわくしている。どきどきしている。不安だ。緊張している。ゆううつだ。<br>\n できるだけ当日に書いてください。<br>\n <br><br></p>\n </td>\n </tr>\n <tr>\n <td>\n <p><b><u>Ｂ．「<font face=\"Impact\">LED-Camp</font> へ行く」と決めた理由</u></b></p>\n <p>ここに書いて欲しいのは「きっかけ」ではありません。「行くと決めた理由」を書いてください。例えば「上司(先生)に行けと言われたから」は単なるきっかけです。行けと言われて、なぜ行くことを決めたのかについて、書いてください。<br></p>\n </td>\n <td>\n <p><b><u>Ｄ．どんなチームにしたい？</u></b></p>\n <p><font face=\"Impact\">LED-Camp</font> は3～4人1組のチームで開発を進めます。<br></p>\n </td>\n </tr>\n </tbody>\n</table>\n\n\n\n## 「四象限自己紹介」シートへの記入方法【宿題】\n以下の手順に従い、「四象限自己紹介」シートへ記入してください。\n\n1. 上記のリンクから「四象限自己紹介」シートのテンプレートを入手する。\n2. 「四象限自己紹介」シートのテンプレートを白紙のままA4用紙に印刷する。\n3. 2～3メートル先からでも読めるようにサインペンを用いて大きくて濃い文字で記入する。2～3メートル先から読めればサインペンでなくても良い。個性を出すために毛筆を使用しても良い。 ただ、ボールペンやシャープペンは最悪である。2～3メートル先から読もうとするだけで疲労を伴う。\n4. サインペンは色を使って良い。装飾やイラストを自由に入れて良い。もちろん、黒一色でも良いし、装飾が無くても良い。\n5. PCに文字を打ち込んで印刷しても構わないが、手書きを推奨する。これは、文字の書き方や癖、文字の大きさ、文字以外の装飾の有無やイラストの有無には大変多くの「あなたのひととなり」に繋がる情報が含まれると考えるためである。\n\n\n> 次は、記入例です。 \n> 「私(星野)の場合」です。\n\n## 「四象限自己紹介」シートの記入例\n\n<p style=\"text-align: center; margin-top: .5em\"><font color=\"#636363\">表. 「四象限自己紹介」シートの記入例</font></p>\n\n<table class=\"table table-bordered\">\n <tbody>\n <tr>\n <td width=\"50%\">\n <p><b><u>Ａ．氏名、呼ばれたい名前(ニックネーム)、所属</u></b></p>\n <ul>\n <li style=\"margin-top: 0.5em\">星野利夫(ほしのとしお)</li>\n <li style=\"margin-top: 0.5em\">としちゃん</li>\n <li style=\"margin-top: 0.5em\">株式会社ヴィッツ</li>\n </ul>\n </td>\n <td width=\"50%\">\n <p><b><u>Ｃ．今の感情</u></b></p>\n <ul>\n <li style=\"margin-top: 0.5em\">「どきどき」と「わくわく」の両方</li>\n <li style=\"margin-top: 0.5em\">「どきどき」…緊張と不安。</li>\n <li style=\"margin-top: 0.5em\">「わくわく」…みなさんとの出会いと、今日からの4日間、何が起こるかの期待。</li>\n </ul>\n </td>\n </tr>\n <tr>\n <td>\n <p><b><u>Ｂ．「<font face=\"Impact\">LED-Camp</font> へ行く」と決めた理由</u></b></p>\n <ul>\n <li style=\"margin-top: 0.5em\">ひとに何かを教えることが好きだから</li>\n <li style=\"margin-top: 0.5em\">知識やスキル以外にも大切なことがあることを、技術者に伝えたいから</li>\n <li style=\"margin-top: 0.5em\">何かに真剣に取り込んでいるひとが好きだから</li>\n <li style=\"margin-top: 0.5em\">色んなひとに出会えるから</li>\n </ul>\n </td>\n <td>\n <p><b><u>Ｄ．どんなチームにしたい？</u></b></p>\n <ul>\n <li style=\"margin-top: 0.5em\">(私にとってチームとは<font face=\"Impact\">LED-Camp</font> 実行委員会)</li>\n <li style=\"margin-top: 0.5em\">それぞれが自分の好きなことをやり、お互いを尊重しながら、学び合い、助け合えるようなチーム。</li>\n </ul>\n </td>\n </tr>\n </tbody>\n</table>\n\n必ず書いて持ってきてくださいね。よろしくお願いします。 \nさて、次のページでなぜ自己紹介が必要なのでしょうか、考えてみましょう。\n\n<div style=\"background-color: rgba(247, 31, 31, 0.2); padding: 1em 1em 0.5em 1em\">\n <p style=\"text-align: center\"><b>コラム 「時間軸以外の軸」</b></p>\n <p style=\"text-align: left\"><br></p><p style=\"text-align: left\">\n 「四象限自己紹介」で使う「軸」は、「時間軸」以外にもいろいろあります。</p>\n <ul>\n <li style=\"margin-top: 0.25em\">社会軸 会社 → 家庭 → 個人<br>\n 例、「会社ではどんなひとですか」→「家庭ではどんなひとですか」→「実際のところ、どんなひとですか」</li>\n <li style=\"margin-top: 0.25em\">空間軸 日本 → 世界 → 宇宙<br>\n 例、「国内で行ってみたい場所」→「世界の中で行ってみたい場所」→「宇宙で行ってみたい場所」</li>\n <li style=\"margin-top: 0.25em\">学校軸 小学校→中学校 → 大学<br>\n 例、「小学校のときの得意教科」→「中学校のときの得意教科」→「大学のときの得意教科」</li>\n </ul>\n <br>\n <p>他にもいろいろあります。<br>\n また、独自の「軸」を開発してみる、というのも楽しいです。</p>\n</div>\n\n## なぜ自己紹介をするのか\n1. 定期的に自己紹介をしている。\n2. 相手は自分のことを知っている。\n - 好み、価値観、経歴、経験\n3. 自分は相手のことを知っている。\n - 好み、価値観、経歴、経験\n4. 良い関係性を築けている。\n - 相手の立場に立って考えることができる。\n5. コミュニケーションの質と量が向上する。\n - 問題の打ち上げが早い。\n - 懸念点や不安点の表面化が早い。\n6. 開発スピードが上がる。\n - タスクの停留が減少する。\n7. QCDが良くなる。　※QCD：品質(Quality),コスト(Cost),納期(Delivary)\n - 成果物の品質が高い。\n - 納期を守っている。\n - 工数が減少している。\n\n\n上記1.から7.は、「自己紹介」(上記1.に相当)から「成果物のQCD向上」(上記7.に相当)までのプロセスを示しています。\n\nもちろん、自己紹介だけでQCDが向上する訳ではありません。ですが、自己紹介などの活動によって関係性が向上することにより、QCD向上に大きく寄与します。なお、QCD向上のためには他にも様々な要素が必要ですが、ここでは他の要素を省略しています。\n\n## 考察「実際の組織では何が起きているか」\n前節の「5. コミュニケーションの質と量が向上する」を見てください。会社等の多くの組織は、この「5.」に注力している印象です。具体的には「報連相」(報告、連絡、相談の略)という言葉を使い、「報連相をちゃんとやれ」と口酸っぱく言っています。\n\n「報連相」を口酸っぱく言っている、ということは、人と人との「関係性」に注目していないと同じ意味だと考えます。何故ならば、もし、「関係性」を重視しているならば、「症状」(報連相ができていないこと)に注目するのではなく、「病原」(なぜ報連相ができないのか)に注目するはずだからです。\n\nまた、「報連相をちゃんとやれ」と言うだけで、報連相ができるようになるのでしょうか。報連相って、そんなに簡単なことでしょうか。私は、そうは思いません。実際は、「報連相を簡単だと思っている人」と「報連相は難しいと思っている人」の両方がいるのではないでしょうか。報連相を簡単だと思う人は、難しいと思っている人の気持ちは、なかなか分からないでしょう。逆も同じです。報連相を難しいと思う人は、簡単だと思っている人の気持ちが、なかなか分からないでしょう。\n\n結果、どうなるか。「あの人は私のことを分かってくれない」と思われ、お互いの距離が離れていく・・・。そんなことが至る所で起きているのではないでしょうか。\n\n\n## 提案「では何からやれば良いのか」\n考察の最初の箇条書きにある通り、先ずは目先のゴールとして「4. 良い関係性を築けている」を目指すべきです。「4. 良い関係性を築けている」を目指すならば、「1. 定期的に自己紹介をしている。」は不可避であると考えています。\n\n## 自己紹介のメリット\n自己紹介の効果には、前ページで見た通り長い目で見るとQCD向上があります。これは今すぐ実現する訳ではありません。なので、長期的なメリットであると言えます。\n\nでは、短期的に見るとどのようなメリットがあるでしょうか。その一つに「コミュニケーション時の精神的な負担減」を挙げることができます。もう一度、3.4.章のプロセスを見てください。「4. 良い関係性を築けている」の中に「相手の立場に立って考えることができる」とあります。相手の立場に立って考えることができるようになると、何が起こるかのか考えてみましょう。\n\n相手の立場に立って考えることができるようになると、気遣い、ねぎらい、思いやりの言葉が多くなります。「何か手伝えることはありますか」、「毎日大変ですね」、「一緒にやりましょう」、「ありがとうございます」というような言葉です。このような言葉を掛けられると嬉しく感じるものですし、もっとその人と話したいと思うでしょう。 そうなると、コミュニケーション自体が楽しいものになり、コミュニケーション時の精神的な負担は減ります。これを「質の高いコミュニケーション」と呼びます。\n\n\n\n## 質の高いコミュニケーションのコツ\nこのような、気遣い、ねぎらい、思いやりの言葉は、人によっては簡単に言える言葉ではありません。非常に難しいと感じる人もいるでしょう。その場合、最初は意識的に使った方が良いでしょう。\n\n「相手の立場に立って考える」というのは、簡単なことではありません。その場合、どうすれば良いか。実はとても簡単で非常に効果的な方法があります。それは、その人の良いところを見つけて、その人を好きになることです。「好き」という言葉に抵抗があるようでしたら「尊敬する」、「感謝する」、「関心を持つ」ならばどうでしょうか。お互いが相手の存在そのものに関心を持つことが「相手の立場に立って考える」ようになることの第一歩であると考えます。\n\n\n\n> 次は、自己紹介するときに必要なものについて考えてみましょう。\n\n\n## 自己紹介をするときには「積極性」が必要です。\n何もアクションをしなければ、始まりません。\n\n相手からのアクションを待つ、という手もありますが、全員ともそうだと困ります・・・。\n\n日常生活ならば、「今日できなくても明日がある」は通じるかも知れません。\n\nしかし、LED-Camp は泣いても笑っても4日間しかありません・・・。\n\n\n\n## 相手の存在そのものに関心を持ってください。\nそして、何かのアクションを起こし、そのことを相手に伝えてください。\n\n「何か手伝おうか」と言う。\n\n「ありがとう」と言う。\n\n相手の状況を確かめる。\n\n自分の状況を相手に伝える。などなど。\n\nつまり、アクションを起こすことに「積極的」になってください。\n\n\n\n> 次は、演習です。 \n> この章での理解度を確認しましょう。\n\n\n## 演習\n\n**演習１：四象限自己紹介の特色を説明してください。**\n\n**演習２：自己紹介の実施によって、どのような効果が期待できるか、具体例を添えて、説明してください。**\n\nなお、具体例はご自身の過去の経験でも結構ですし、それ以外のこと(他人の話、予想)でも結構です。\n\nこの演習に関しては答え合わせを行なう予定はありませんが、採点を希望する場合は問い合わせフォームを通じて承ります。\n\n\n\n> より良い自己紹介にするためには、「ふりかえり」と「分かち合い」が有効です。 \n> 次の章では「ふりかえり」と「分かち合い」について考えてみましょう。","dir":"/camp9/pre_learning/0_teambuilding/","name":"1_team_introwork.md","path":"camp9/pre_learning/0_teambuilding/1_team_introwork.md","url":"/camp9/pre_learning/0_teambuilding/1_team_introwork.html"},{"layout":"default","title":"ふりかえりと分かち合い","content":"# ふりかえりと分かち合い\nsource: `{{ page.path }}`\n\n## 「ふりかえり」とは、「分かち合い」とは、何でしょうか。\n「ふりかえり」とは「内省」のことです。\n\n「分かち合い」とは「共有」のことです。\n\n## 「ふりかえり」をすると、どうなるのでしょうか。\n「ふりかえり」をすると、こんなプロセスが発生するでしょう。\n\n1. 自己紹介する前は、他の人は何を聞きたいか分からない、他の人も私の何を聞きたいか分からない、という状態でしょう。\n2. 次に、自己紹介をすることによって、自分に関することのうち、自分の話したいことを話すことができる状態になります。\n3. この状態の時に、「自分自身の行為に対する問い」を考えることを通じて「ふりかえり」を実施してみましょう。「自分自身の行為に対する問い」とは、具体的には「自己紹介をやってみて良かった点、困った点」のような問いのことです。\n4. 「ふりかえり」の実施によって、気付いたこと、感じたことを言語化できるようになります。\n例、自分が「できた」とか「良かった」と思った点を言語化できる。\n例、自分が「できなかった」とか「上手くいかなかった」と思った点を言語化できる。\n5. 言語化することにより、記憶に定着しやすくなります。\n6. 記憶に定着するので、「良かった点をもっと良くする」、「困った点を改善する」という意識が自然と働き、より良い自己紹介ができるようになります。\n\n上記プロセスで分かるように、「ふりかえり」は自己紹介に特化したものではありません。様々なことの改善に役立ちます。\n\n\n\n## 「分かち合い」をすると、どうなるのでしょうか。\n\n学習速度が数倍になります。\n\n他の人「ふりかえり」を聞くことによって、自分と同じ意見と、自分と違う意見を見つけることができます。\n\n\n\n**同じ意見を聞くと・・・**\n\n共感し、「私とあなたは同じ人間」と思えます。\n\n**違う意見を聞くと・・・**\n\n「そういう見方があったか！」\n\n思考の枠が外れます。(これを「リフレーミング」と言います。)\n自分だけの「ふりかえり」では気付かなかったことを言語化できます。\n\n「逆に考える人がいるんだ！」\n\n色んな人がいるんだということ、色んな人がいていいんだということ(ダイバーシティ、多様性)を実感できます。\n\n\n> 「ふりかえり」で使用する「ふりかえりシート」というものがいくつかあります。 \n> 効率良く、気軽に使えるものもあります。 \n> どんなふりかえりシートがあるのか、見てみましょう。 \n\n\n## ふりかえりシートとは\nふりかえり(内省)のときに使用するシートのことです。\n\nシートには「問い」があり、何をふりかえれば良いのか、分かるようになっています。\n\n## ふりかえりシートいろいろ\n「設問シート」、「KPT シート」、「YWT シート」を紹介します。\n\n### 設問シート\n何を問いにするかが大事です。(講師の腕の見せ所です。)\n\n予め問いを用意する場合と、その場を見て(参加者の表情などを見て)問いを決める場合があります。\n\n以下、設問の例です。\n\n> 例、どんな気付き、学びがありましたか。\n\n> 例、どんな変化がありましたか。\n\n> 例、今回の内容を踏まえて、明日から何を始めますか。(やめますか。)\n\n### KPTシート\nKPTは「けぷと」、または、「けーぴーてぃー」と読み、Keep,Problem,Tryの頭文字をとった言葉です。\n\nKPTシートとは、定型化したふりかえりシートです。設問は、K(続けたいこと)、P(問題点)、T(次に挑戦すること)の3つです。 「KPTをやる」とは、このシートを使用してふりかえりをすることを指します。\n\n<table class=\"table table-bordered\">\n <tbody>\n <tr>\n <td width=\"50%\">\n <p>K(続けたいこと)</p>\n <p><br></p>\n <p><br></p>\n <p><br></p>\n </td>\n <td rowspan=\"2\" width=\"50%\" valign=\"top\">\n <p>T(次に挑戦すること)</p>\n </td>\n </tr>\n <tr>\n <td width=\"50%\" valign=\"top\">\n <p>P(問題点)</p>\n <p><br></p>\n <p><br></p>\n <p><br></p>\n </td>\n </tr>\n </tbody>\n</table>\n\n<p style=\"text-align: center; margin-top: .5em\"><font color=\"#636363\">図. KPT シート</font></p>\n\nKPTをやるときのコツは、「KPT」の順番でやることです。最初に「K(続けたいこと)」を出します。次に「P(問題点)」を出し、最後に「T(次に挑戦すること)」を出します。\n\nTを出すとき、ついついPばかりに目を向けがちですが、Kからも出すようにしてください。KからTを出すのが難しいのであれば、「これをやって良かったから続けたいけど、もっと良くしたい！」という感じに考えてみてはいかがでしょうか。\n\nKとPが、合わせて20個も30個もある場合は、その全てに対してTを出す必要はありません。「パレートの法則」に従い、重要度を考えて、重要なものベスト5についてTを出す、というやり方もあります。\n\n<div style=\"background-color: rgba(247, 31, 31, 0.2); padding: 1em 1em 0.5em 1em\">\n <p style=\"text-align: center\"><b>コラム 「パレートの法則」</b></p>\n <p style=\"text-align: left\"><br></p><p style=\"text-align: left\">\n 「パレートの法則」は、別名「２０：８０の法則」とか、「２：８の法則」とも呼ばれています。</p>\n <p>こんな話を聞いたことがありませんか。働きアリの中で本当に働いているのは、働きアリ全体の２割だけで、他の８割は働いていない、\n という話を。そして、働いている２割のアリによって、全体の８割のエサが集められている、という話を。\n アリだけでなく、ミツバチにも同じことが言えるのだそうです。</p>\n <p>他にも、お金持ち上位２割がその国全体の資産の８割を有しているとか、ある会社は成績上位２割の営業マンが会社全体の８割の売り上げを占めているとか。</p>\n <p>この「パレートの法則」という名の経験則により、KPTで出た意見のうち上位２割を押さえれば、全体の８割が改善することになる、と言えそうです。</p>\n <p>KPTのKとPがたくさん出た場合は、より重要そうな上位２割について、Tを考えてみてください。</p>\n</div>\n\n\nYWTシート\n\nYWTは、「わいだぶるてぃー」と読みます。\n\nYWTシートとは、定型化したふりかえりシートです。設問は、Y(やったこと)、W(分かったこと)、T(次にやること)の3つです。「YWTをやる」とは、このシートを使用してふりかえりをすることを指します。\n\n\n<table class=\"table table-bordered\">\n <tbody>\n <tr>\n <td width=\"50%\">\n <p>Y(やったこと)</p>\n <p><br></p>\n <p><br></p>\n <p><br></p>\n </td>\n <td rowspan=\"2\" width=\"50%\" valign=\"top\">\n <p>T(次にやること)</p>\n </td>\n </tr>\n <tr>\n <td width=\"50%\" valign=\"top\">\n <p>W(分かったこと)</p>\n <p><br></p>\n <p><br></p>\n <p><br></p>\n </td>\n </tr>\n </tbody>\n</table>\n\n<p style=\"text-align: center; margin-top: .5em\"><font color=\"#636363\">図. YWT</font><font color=\"#636363\">シート</font></p>\n\nYWTはKPTと大変似ています。YWTとKPTの共通点と違いを押さえながら、YWTとはどのようなものなのか、見てみましょう。\n\nKPTとの共通点\n\n定型化したふりかえりシートです。シートのフォーマットも同じです。\n\nKPTとの違い\n\nKPT\n```\n設問は、K(続けたいこと)、P(問題点)、T(次に挑戦すること)。\n チーム全体のことは出しやすい。\n ネガティブな意見も出しやすい。\n 後ろ向きになることがある。\n```\n\nYWT\n```\n設問は、Y(やったこと)、W(分かったこと)、T(次にやること)。\n チーム全体のことは出しにくい。\n ネガティブな意見は出しにくい。\n 後ろ向きになりにくい。\n```\n個人的な意見や感想、ポジティブな意見や感想をより求めたい場合は、YWTがより良いと思います。\n\nチームとして、次は何に挑戦したいか、どっちへ進むのか、という意見をより求めたい場合は、KPTがより良いと思います。\n\n> 次は、演習です。 \n> 理解度を確認しましょう。 \n\n**演習：「KPT」、「YWT」とは、何の略でしょうか。**\n\n> 「自己紹介」で自分のことと相手のことが分かりました。 \n> 「ふりかえり」と「分かち合い」で、より良い自己紹介ができるようになりました。 \n> 次は「チーム」について考えてみましょう。 ","dir":"/camp9/pre_learning/0_teambuilding/","name":"2_team_review.md","path":"camp9/pre_learning/0_teambuilding/2_team_review.md","url":"/camp9/pre_learning/0_teambuilding/2_team_review.html"},{"layout":"default","title":"チーム","content":"# チーム\nsource: `{{ page.path }}`\n\n> 「技術的な知識とスキルだけでは技術者は幸せになれないかも知れない \n> と大真面目に思った話」\n\n\n## 無能力技術者の格闘\n私は組込み技術者を1997年からやっています。多くの方々のお蔭でいろいろな経験を積むことができました。\n\n　※その当時の現場の話なので、今では生産性や、必要とされるスキルについては、今と異なっているものもあります。\n\n最初は「世間知らずにも程がある」と言われるんじゃないかと思うほどの無能技術者でした。なので、とにかく知識を身に付けました。\n\nどんな仕事でも「やってみる？」と聞かれたら「やります！」と即答。内容もろくに確認せずに・・・。引き受けてから大急ぎでやり方を調べる・・・というやり方でした。なぜならば、仕事を頼まれなくなったら終わりだと思っていましたので。本を漁ったり、何を勉強すればできるようになるかを調べたり、人に聞いたりして、なんとか仕事をもらい続けました。\n\nそのうち「知っているだけじゃダメだ」ということに気付きました。経験が無くて、応用力が無くて、注意すべきことが何か分からない(そもそも注意しなければならないという発想が無い)という状態でした。\n\nそこで、何かスキル(能力)を付けようとするのですが、一朝一夕でスキルを獲得できる訳がありません。\n\nでも、「とにかく自分だけの強みを何か身に付けよう」と思い、「誰よりもタイピングが早いこと」を目指しました。プログラマの生産性なんて大半はタイピングだろうという安直な考えです。同時にテキストエディタのショートカットキーをカスタマイズし、編集スキルを上げることにこだわりました。\n\nこのアプローチは間違えてなかったような気がします。タイピングのトレーニングばっかりやった成果が出て3ヶ月ぐらいで飛躍的に早くなりました。\n\n\n\n## コピペプログラミング\nあと、参考になりそうなコードを探し出す能力も上がりました。これは、プログラムを組むときは全部タイピングするよりコピペした方が早いことに気付いたから、というのもありますが、ゼロから書いた自分のオリジナルのコードだと、コードレビューでボコボコにされることが分かったから、というのもあります。\n\nならば、既存のコードを組み合わせれば良い。徹底的に組み合わせよう。徹底的にコピペで書こう。どんなに些細なことでも、例えば変数の宣言ですら、コピペでいこう。そうすれば、コメントの書き方も模倣できるし、新規変数のネーミングも模倣できるし。\n\n<center>▽　　　 ▽　　　 ▽</center>\n\n「星野くん、ここのコメント、何でこんなコメント？」\n\n「えーとですね、これは別関数に似た処理があって、そこに倣いました。」\n\n「ちょっと、イケてないなぁ・・・。ちょっと直してよ。」\n\n「じゃあ、参考にした関数のコメントはどうしますか。あと、１ヶ所だけじゃないんです。他の関数も同様のコメントがあるんですけど・・・。」\n\n「えー、そうなの。・・・そのままでいいや。」\n\n<center>△　　　 △　　　 △</center>\n\n・・・と、まあ、こんな感じです。\n\nちなみに、その時の現場は、「理想的なコードを追求する」ことよりも、「前例を踏襲する」ことの方が重要でした。なので、前例に無いコードを書いちゃうと、コードレビューでボコボコにされる訳ですね。\n\n\n\n## 仕事が回り出すと、仕事が回らなくなる\nタイピング速度の向上と、徹底的なコピペコーディングの効果で、コーディングの生産性「だけ」は、周囲の誰よりも早くなりました。結果、それなりに評価され、それなりのポジションを得ることができました。\n\nすると、どんどん面白い仕事がやってくるようになりました。私の現場の仕事は、ほとんどが派生開発でしたが、私のところには新規モノもそこそこやってきました。\n\nそんな感じで4、5年ぐらいが経ちました。このときは、ちょっと大変でした。とにかく、仕事が多すぎる。仕事が回らない。月の残業時間は、100時間を切りませんでした。一番多いときで160時間ぐらい残業していました。\n\nこのとき、技術的な知識とスキルだけでは技術者は幸せになれないかも知れない、と大真面目に思いました。\n\n\n## 技術者の幸せに必要なもの\nそこから、いろいろな勉強を始めました。コーチング、リーダシップ、ファシリテーション、などなど。\n\nプロジェクトマネージャを任された時期に、円形脱毛症になりました。正直、これは自分自身が驚きました。自分だけは、この手の話に無縁だと思っていましたから・・・。\n\n円形脱毛症って、頭だけじゃないんですね。体中にできるんです。顎とか、喉にもできました。背中とか、太ももとかにも・・・。大きい物だと握りこぶしぐらい、小さなものだと一円玉の半分ぐらい。大小様々の「クレータ」が体中のいたるところに30ヶ所ぐらい。\n\n会社に相談したら「病院へ行け」と言われ、メンタルクリニックで「うつ病」と診断され、その後、2年間投薬治療を受けました・・・。\n\n思い返せば、自分の表層意識では「まだまだ楽勝、大丈夫」と思っていたのに、深層意識は「もうダメ、無理」って言っていたんですね。\n\n確かに、自分のチームの仕事は、いつも火の車。プレイングマネージャなのに、メールの処理と管理帳票のチェックで一日が終わり、自分が担当している部品の設計は残業時間を使ってやっている有り様でした。\n\nさらに、当たり前のように起こる「ちゃぶ台返し」、そして、常に納期遅れの状態・・・。\n\nこの体験を周囲に話すと、「あるある」という反応が大半でした。あー、自分だけじゃないんだ・・・。\n\nこの辺りから、本腰を入れて、どうしたらもっと楽しく仕事ができるか、わくわくしながら仕事ができるか、考えるようになりました。そうすれば、自分のように「うつ病」になる人が減るんじゃないかと考えた訳です。\n\n現時点の私の答えは「チームビルディング」です。\n\n\n## チームビルディング\nなぜ、チームビルディングでは、人間関係にフォーカスするのか。より良いチームとは何か。より良いチームを作るにはどうしたら良いか。\n\nこのセッションは「チームビルディング」がテーマです。どうすればこのプロジェクトが成功するのか、みなさんと一緒に考えたいと思います。\n\nそしてもう一つ。アジャイル開発です。どうすればプロジェクトは好循環で回るようになるのか。そのシンプルな答えがアジャイル開発にあると思っています。アジャイル開発は次のセッションのテーマです。\n\nこのLED-Campでチームビルディングの概念を理解し、アジャイル開発を実践してください。生きた知識と経験を獲得してください。そして、実際の現場で活用してください。\n\nみなさんのこれからの技術者人生が、楽しく、やりがいのあるものになりますように。\n\n\n> どうしたら、チームになれるのでしょうか。 \n> 次で考えてみましょう。\n\n## チームビルディングとは、\n「個の集まり」から「機能するチーム」にすることです。\n\n<center>\n<img src=\"img/02.png\">\n</center>\n\n\n> チームビルディングをまったくやらないとどうなるか。\n> 開発現場で起きそうな失敗パターンを上手く説明した「モデル」があります。\n> 次で見てみましょう。\n\n\n5.7. ダニエル・キムの組織成功の循環モデル\n\n<center>\n<img src=\"img/03.png\">\n</center>\n\n**「関係の質」に着目した場合**\n\n「関係の質」が向上すると、「思考の質」が向上し、「行動の質」が向上し、結果として「結果の質」が向上します。矢印の流れで循環します。\n\n**「結果の質」に着目した場合**\n\n最初に「結果の質」に着目すると、逆回転します。\n\n先ず、直接的に結果になる行動以外を排除するでしょう。次に柔軟な思考ができなくなります。結果として、「関係の質」が低下します。\n\n> 次は、演習シートです。\n> 理解度を確認しましょう。\n\n\n## 演習\n\n<center>\n<img src=\"img/04.png\">\n</center>\n\n図. (演習)ダニエル・キムの組織成功の循環モデル\n\n＿＿に適切な文字を入れ、「ダニエル・キムの組織成功の循環モデル」を完成させましょう。\n\n\n> チームビルディングの一環として、チームで決めて欲しいことがあります。 \n> ミッションとルールです。次章でお話します。","dir":"/camp9/pre_learning/0_teambuilding/","name":"3_team_whatsteam.md","path":"camp9/pre_learning/0_teambuilding/3_team_whatsteam.md","url":"/camp9/pre_learning/0_teambuilding/3_team_whatsteam.html"},{"layout":"default","title":"ミッションとルール","content":"# ミッションとルール\nsource: `{{ page.path }}`\n\n## 使命(ミッション)とは\n自らの命を何に使うか、自ら決めることです。\n\nミッションの作り方、使い方を示します。\n\n<center>\n<img src=\"img/05.png\">\n</center>\n図. ミッションの作り方、使い方\n\nミッションを達成するために、もう一つ決めて欲しいことがあります。\n\n## ルールとは\nプロジェクト、チーム、ミーティングなどで設定する行動規範のことです。\n\nチーム目標達成のため\n機能するチームになるため\nに設定します。\n\n\nルールの作り方、使い方を示します。\n\n\n図. ルールの作り方、使い方\n<center>\n<img src=\"img/06.png\">\n</center>\n\n> 「否定的な言葉」で作ったルールと「ポジティブな言葉」で作ったルール \n> の違いを見てみましょう。 \n\n\n## 例題・大遅刻事件\n話に夢中になってしまった、時刻を勘違いしていた、などの理由で遅刻すると、時間にルーズだ、やる気がない、大人としての自覚が無い、と思われてしまいます。また、チーム全体が、或いはLED-Camp全体が「しらけ」ムードになるかも知れません。チームの目的、目標を達成できないかも知れません。この場合、どんなルールを制定すれば良いのでしょうか。\n\n図. 例題・大遅刻事件\n\n<center>\n<img src=\"img/07.png\">\n</center>\n\n> 次は「ポジティブな言葉」で作ったルールの事例集です。 \n> みなさんのルール作りの参考にしてください。 \n\n## ルール事例集\n\n\n<p><br></p>\n<h2>6.4. ルール事例集</h2>\n\n<table class=\"table table-bordered\"><tbody><tr>\n<td width=\"50%\"><p>ルール事例<br></p></td><td width=\"50%\"><p>狙い<br></p></td></tr><tr><td><p>語りたい人が語る。<br>語りたい人は語らない人に強制しない。<br>語りたくない人は語る人の邪魔をしない。<br><br></p></td><td><p>参加するしないは自分の意志で。<br>過剰な自己開示を防ぐ効果もあります。<br></p></td></tr><tr><td><p>ここで語ったことは、ヨソでは語らないようにしましょう。<br></p></td><td><p>ホンネのなかには部外者に知れると都合の悪い話もあります。<br></p></td></tr><tr><td><p>ここで語らなかったことは、ヨソでは語らないようにしましょう。<br></p></td><td><p>ここでホンネを出さず、あとで愚痴や陰口はいわないように、という意味です。<br></p></td></tr>\n<tr>\n<td><p>意見の対立や食い違いをみんなで楽しみましょう。<br></p>\n</td>\n<td><p>調和しないといけない（＝ホンネを抑える）という気持ちをはずしてあげます。<br></p>\n</td>\n</tr>\n<tr>\n<td><p>強がりをいわず、自分の弱みを素直に見せましょう。<br></p></td>\n<td><p>タテマエとホンネをこういいかえるだけで、わかりやすくなります。<br></p></td>\n</tr>\n<tr>\n<td><p>肩書や立場を忘れ、自分のことは棚にあげましょう。<br></p></td>\n<td><p>責任という重しをはずすだけで、タテマエの発言が減ります。<br></p></td>\n</tr>\n<tr>\n<td><p>今日は結論を出したり合意したりすることはやめましょう。<br></p></td>\n<td><p>答えを出さないといけないという強迫観念をはずせば、気軽に話せます。<br></p></td>\n</tr>\n<tr>\n<td><p>今日はいいあう場ではなく、聴きあう場にしましょう。<br></p></td>\n<td><p>ランクの高い人が発言を独占するのを禁止するルールです。<br></p></td>\n</tr>\n<tr>\n<td><p>正論をいいすぎたり、相手をやっつけすぎたりしないようにしましょう。<br></p></td>\n<td><p>ヘコまされると、二度と話をする気がなくなります。<br></p></td>\n</tr>\n</tbody></table>\n\n> 次は、演習です。 \n> 理解度を確認しましょう。 \n\n\n### 演習\n\nどんな表現にすれば、守り易く、誰も孤立せず、自分のチームらしいルールになるか、考えてみましょう。\n\n<table class=\"table table-bordered\"><tbody><tr><td width=\"50%\"><p>起案時のルール<br></p></td><td width=\"50%\"><p>合意時のルール<br></p></td></tr><tr><td><p>時間厳守<br>（集合時刻、終了時刻）<br></p></td><td><br></td></tr><tr><td><p>アジェンダに集中する<br></p></td><td><br></td></tr><tr><td><p>建設的な意見を出す<br></p></td><td><br></td></tr><tr><td><p>ヒソヒソ話をしない<br></p></td><td><br></td></tr></tbody></table>\n\n> いよいよ、このテキストも終わりが近付いてきました。\n> 私からみなさんにお願いがあります。","dir":"/camp9/pre_learning/0_teambuilding/","name":"4_team_mission.md","path":"camp9/pre_learning/0_teambuilding/4_team_mission.md","url":"/camp9/pre_learning/0_teambuilding/4_team_mission.html"},{"layout":"default","title":"合意形成","content":"# 合意形成\nsource: `{{ page.path }}`\n\n## LED-Campにおける合意形成シーン\nLED-Campでは多くの「合意形成しなければならないシーン」があります。\n- 本セッション内\n - LED-Camp参加者全員の議論により、チーム分けの方法を決める。\n - 各チームのメンバの議論により、チーム名、ミッション、ルールを決める。\n- 本セッション外\n - 各チームのメンバの議論により、戦略や戦術を決める。\n - 各チームのメンバの議論により、設計方針や設計担当を決める。\n - 各チームのメンバの議論により、発生した問題や課題の解決方法を(解決する/しないを含め)決める。\n\nこのため、合意形成できる/できないが、大きなポイントとなります。\n\n## 合意形成に関する設問【宿題】\n合意形成に関する設問に解答し、9/1までに提出してください。\n参考にした文献などの情報がある場合は、何を参考にしたか、明らかにしてください。（文字数に含みません。）\n　・webページの場合、URLと閲覧日。(例、https://xxx.xx/xxxx (2018/8/xx))\n　・書籍の場合、書名と著者。(例、○○入門 (○野))\n　・論文の場合、著者名と発行年。(例、○野(201x))\n\n**設問１．合意に関する以下の内容について、あなたの考えを述べてください。**\n\n(1) 合意と同意の違いを50文字以内で説明してください。\n\n(2) 会議や話し合いで決まったことが実行されない場合、どのような理由が考えられるでしょうか。その理由を100文字以内で述べてください。\n\n**設問２．LED-Campでは、参加者全員で合意した方法で実際にチーム分けを実施します。チーム分けの方法について、あなたの考えを述べてください。**\n\n(3) LED-Campにおけるチーム分けはどのような方法が良いでしょうか。その方法を100文字以内で述べてください。\n\n(4) (3)の理由を100文字以内で述べてください。\n\n回答はこちらからお願いします。\n\n[回答フォーム（別ウィンドウが開きます）](https://docs.google.com/forms/d/e/1FAIpQLSfrG_xOTFsbQ8zIqKyVxoaWl_OFgcDqYt00OMxd6QADaA_bWA/viewform?usp=sf_link)","dir":"/camp9/pre_learning/0_teambuilding/","name":"5_team_consensus.md","path":"camp9/pre_learning/0_teambuilding/5_team_consensus.md","url":"/camp9/pre_learning/0_teambuilding/5_team_consensus.html"},{"layout":"default","title":"おわりに","content":"# おわりに\nsource: `{{ page.path }}`\n\n## 結局、何が言いたかったのか\nこのテキストを通じて私が言いたかったのは、以下の二点です。\n\n- チームビルディングによって、チームのパフォーマンスは飛躍的に向上します。\n- チームビルディングの中で特に重要なのが、チームメンバの関係性と、チームメンバが自分たちのチームをどう作るか、です。\n\n\n## 参加者のみなさんへのお願い\nこのテキストを「技術者の目」で読めたでしょうか。例えば、「なぜ自己紹介が必要なのか」、「なぜニックネームを書かねばならぬのか」など、批判的に読むことができたでしょうか。\n\nこのテキストの内容を、LED-Campで実践してください。「チームビルディング」セッションはこのテキストに沿って進めます。しかし、セッションの中では細かい説明ができません。このテキストに書いてあることを思い出しながら、自発的に行動してください。\n\n最後に、LED-Camp 終了後も実践してください。自分のチーム（組織）でこのテキストに書いてあることと、体験したことを、実践してください。実践したらどんな変化があったのか、逆に、無かったのか、実行委員にこっそり教えてください。アドバイスなど、お手伝いできる範囲で、お手伝いします。\n\n> 大切なことですので、二度書きました。\n\n## チェックリスト\n- チームビルディングにおいて「自己紹介」が必要な理由を説明できますか。\n- 「ふりかえり」で何が起こるのか、説明できますか。\n- 「分かち合い」で何が起こるのか、説明できますか。\n- 「チームビルディング」とは何か、説明できますか。\n- 「ダニエル・キムの組織成功の循環モデル」を書けますか。\n- 「ミッション」とは何か、説明できますか。\n- ポジティブな言葉で「ルール」を書いた方が良い理由を、説明できますか。\n\n\n> 「チームビルディングの理論と実践」はここまでです。 \n> ありがとうございました。 \n\n\n## おわりのおわりに\n宿題の「3. 自己紹介ワーク」の「四象限自己紹介」シートの作成、および、「7. 合意形成」の設問の回答、忘れずにお願いします。","dir":"/camp9/pre_learning/0_teambuilding/","name":"6_team_conclude.md","path":"camp9/pre_learning/0_teambuilding/6_team_conclude.md","url":"/camp9/pre_learning/0_teambuilding/6_team_conclude.html"},{"permalink":"/camp9/pre_learning/0_teambuilding/","layout":"default","title":"チームビルディング","content":"# チームビルディング\nsource: `{{ page.path }}`\n","dir":"/camp9/pre_learning/0_teambuilding/","name":"README.md","path":"camp9/pre_learning/0_teambuilding/README.md","url":"/camp9/pre_learning/0_teambuilding/"},{"layout":"default","title":"はじめに","content":"# はじめに\nsource: `{{ page.path }}`\n\nこんにちは。本資料では、「みんなでScrum!」で演習予定のScrumフレームワークについて、基本的な知識をまとめております。ぜひご一読ください。なお、本資料はScrumフレームワークを作り上げたことで有名なジェフ・サザーランドさんのThe Scrum Guide[1]に準じた資料になっています。なお、以下Scrumをスクラムと呼称します。\n\n## アジャイル開発手法\n\nスクラムを知る前に、**アジャイル開発手法**について知る必要があります。\nソフトウェア開発をはじめとする開発プロジェクトでは、多くの場合、開発する上でのルール・手順が存在\nしています。アジャイル開発手法とは、近年多くの企業が導入している開発スタイルの1つで、よくウォーターフォール開発と比較されます。下の図と共に両者の違いを見てみましょう。\n\n**ウォータフォール式**\n<img src=\"img/waterfall.png\">\n\n**アジャイル式**\n<img src=\"img/agile.png\">\n\n\n### ウォータフォール開発\n**ウォーターフォール開発**とは、大きく分析・設計・実装・テストの4つに分割し、仕様書に則って作っていくものです。各工程は別々の人が行い、前の工程に戻ることは想定されていません。\n\n- **メリット**<br>\nスケジュール管理がしやすく、各工程で文書作成をするため、プロジェクト管理がしやすい・品質が保証できるといった利点が挙げられます。\n- **デメリット**<br>\n変化に弱く、仕様変更が難しいです。また、最後まで動いているものが見れず、動いたとしてもすでに時代に乗り遅れているといったケースもあります。近年は変化が特に激しく、携帯電話用に開発していたツールをリリースしようとしたら、世の中はスマホが急速に普及してたから開発が全部ムダになった！なんてこともザラにあるようです。\n\n### アジャイル開発\n**アジャイル開発**とは、短い期間(1週間〜1ヶ月)を区切って、その期間中に動作する完成品の一部を作り、それを繰り返すものです。ウォーターフォール開発の各工程をぎゅっと小さくして何回も繰り返すイメージです。\n開発ごとにテストをすることによって、「常に動作する」ものを作り続けるという特徴があります。\n\n- **メリット**<br>\n最終的なリリース期間はウォーターフォールと同じですが、時代のニーズに合わせた製品を作ることが可能です。また、柔軟に変化に対応できることから、不具合が発生した際でも、修正の工数が少なく済みます。\n\n- **デメリット**<br>\n開発を進めていく中で，より良い方向性を実現するために改善やテストを繰り返すことで，当初思い描いていた計画の方向性がずれてしまったり、先が読めないものを扱うことが多いため、コストが読めないといった問題点があります。\n\n\nスクラムは、アジャイル開発手法の一種です。LED-Campではこのアジャイル開発を用いて開発演習をしていきます。次の章からはスクラムについて学んでいきます。スクラムについて理解を深めた上で、当日に活かせるようにしましょう。\n\n## 参考\n\n- [1] Jeff, Sutherland and Ken, Schwaber (2013),「スクラムガイド」, https://www.scrumguides.org/docs/scrumguide/v2017/2017-Scrum-Guide-Japanese.pdf\n- [2] 細合晋太郎 (2015), 「みんなでScrum!!!」, http://swest.toppers.jp/LED-Report/Camp3/flashair/proceedings.html\n- [3] Ken, Beck and et all , ``Manifesto for Agile Software Development’’, http://www.agilemanifesto.org/\n- [4] 平鍋健児・野中郁次郎 (2013), 「アジャイル開発とスクラム~顧客・技術・経営をつなぐ協調的ソフトウェア開発マネジメント」, 翔泳社\n- [5] Jonathan Rasmusson著, 西村直人・角谷慎太郎監訳, 近藤修平・角掛拓未訳 (2011), 「アジャイルサムライ」, オーム社\n- [6] 西村直人・永瀬美穂・吉羽龍太郎 (2013), 「SCRUM BOOT CAMP THE BOOK」, 翔泳社","dir":"/camp9/pre_learning/1_scrum/","name":"0_scrum_intro.md","path":"camp9/pre_learning/1_scrum/0_scrum_intro.md","url":"/camp9/pre_learning/1_scrum/0_scrum_intro.html"},{"layout":"default","title":"スクラムとは","content":"# スクラムとは\nsource: `{{ page.path }}`\n\n## スクラムの概要\n\n近年は、世の中のお客さんのニーズが流動的に変化し、それに伴い、技術進化も非常に活発に行われています。そうした中で、常に進む方向を調整しながら目的を達成できるプロダクトを作るために、効率的なチーム開発をチームが一丸となって行う作業・会議・成果物を定めたものです。\nスクラムには以下のような特徴があります。\n\n- 成果の最大化を目的とする\n - 要求に優先順位をつけることによって、成果を最大にする\n- 時間の枠を決めて進める(タイムボックス)\n - 固定の時間に区切って作業をすすめる\n- 進捗の見える化(透過性)\n - 目標や現在の状況、問題点を見える化する\n- レビュー(検査)\n - 作成物や進捗、開発に問題がないか定期的に確認する\n- ふりかえり(適応)\n - 進捗の遅れややり方に問題があった際は調整・改善する\n\n## スクラムの役割\nスクラムを回す上でできたチームのことを、スクラムチームと言います。\nその中で決められている役割は以下の3種類です。\n\n### プロダクトオーナー\nプロダクトの価値を最大化することに責任を持つ人です。\n顧客から要求を聞き出し、このプロジェクトで何を作りたいかを考え、チーム内で共有します。いわゆる営業職のような役割です。すなわち、顧客要求を正確に分析し、技術課題に落とし込むことが求められます。\n\n### 開発チーム\n実際に開発を担当する人たちであり、常にリリース可能な機能を完成させることに責任を持ちます。プロダクトオーナーが実現したいプロダクト、それに必要な要素技術を実装します。コードを書くだけでなく、要求の聞き出し・見積もり・設計・デザイン等、必要な作業を全部こなします。人数は3人〜9人と、少人数で行います。\n\n### スクラムマスター\nスクラムを問題なく進められるようにリードする人です。作業を円滑に進められるようにする、サポーター的な役割を持っています。もしうまく行かないことがあって、スクラムがうまく進んでいないときはその問題を取り除いていきます。\n\n<center>\n<img src=\"img/scrum_model.png\" width=\"80%\">\n</center>\n\n## スクラムの流れ\n\nスクラムでは、スプリントという短い期間を繰り返します。一般的に、1スプリントは1週間〜1ヶ月とされており、一度期間(タイムボックス)を決めた場合、適切な進捗管理とその評価をするために、期間の延長・短縮はしません。\n\n<center>\n<img src=\"img/scrum_flow.png\">\n</center>\n\n以下、上図の左から内容を説明します。\n\n### プロダクトバックログの作成\nプロダクトオーナーが顧客要求を分析し、実現すべき機能をリスト化します。この「要求リスト」を**プロダクトバックログ**といいます。この要求リストの項目が全部完了した際に、開発の完了と定義します。\n次に、重要度や優先度に応じて開発の順序を決定していきます。\n\n\n### スプリントバックログの作成\nプロダクトバックログを開発全体の進捗、やるべきリストと捉え、次に各スプリントで何を開発するかを決めていきます。\nここで、1スプリント内に、プロダクトバックログから当該スプリントで何を開発するか選択します。更にその項目をより詳細にタスク分けを行います。この工程で発生したタスクリストを**スプリントバックログ**と呼びます。スプリントバックログは、プロダクトバックログの項目を達成するためのもの、と考えてください。この際、スプリントバックログで作成されるタスクは、適切に開発進捗を管理するため、必ず「何を持って完了とするか」を明確に定義しておく必要があります。\n\n### 実装\n実際の開発期間です。\n\n### レビューとふりかえり\nスプリントの最後に、スプリントバックログにあげたタスクの進捗状況や開発物の動作確認、プロダクトバックログの\n再確認など、レビュー(スプリントレビュー)を行います。この際。各スプリントにおいて完成してきたプロダクトバックログアイテムのまとまりを**インクリメント**と呼びます。インクリメントは常に利用可能であり、動作するのが理想です。レビューを終了した後にふりかえりを行い、次のスプリントを円滑に進めるための計画と改善案を話し合います。\n\nこれらを繰り返すことによって、開発を進めていきます。具体的な手順は次の章で説明します。\n\n**用語まとめ**\n- スプリント\n - 開発期間の１単位。１週間〜1ヶ月など比較的短期間で設定する\n- プロダクトバックログ\n - いわゆる要求リスト\n- スプリントバックログ\n - プロダクトバックログをより具体的にタスクに分割したリスト\n- インクリメント\n - 開発物。成果物\n\n**スクラムで登場する役割**\n- プロダクトオーナー\n - 開発するプロダクトの責任を持つ人。\n- スクラムマスター\n - スクラム全体のサポートを行う人。\n- 開発チーム\n - 実際に開発を行う人。","dir":"/camp9/pre_learning/1_scrum/","name":"1_scrum_overview.md","path":"camp9/pre_learning/1_scrum/1_scrum_overview.md","url":"/camp9/pre_learning/1_scrum/1_scrum_overview.html"},{"layout":"default","title":"Scrumを用いたチーム開発","content":"# Scrumを用いたチーム開発\nsource: `{{ page.path }}`\n\n## スプリントの実践方法\nスクラムでは、1スプリント当たりにタイムボックスという制限時間を設けます。通常は1週間〜1ヶ月と、ほとんどは1ヶ月以内で行われます。それ以上になると、仕様変更によって開発の手戻りが増大する可能性があります。スプリント内での目標をスプリントゴールといいます。\n\n次に、1回のスプリントを構成する手順を確認していきましょう。\n\n1. スプリントプランニング：計画\n - スプリント内で何を開発するか決定する会議\n2. デイリースクラム：開発と進捗確認\n - 1日1回行う、チームの状況把握・プロダクトの再認識を行う会議\n3. スプリントレビュー：開発物の確認、仕様再定義\n - 開発物の動作確認、プロダクトバックログの再確認\n4. スプリントレトロスペクティブ：ふりかえりと改善\n 今回のスプリントのふりかえりと次の改善策を検討\n\n<center>\n<img src=\"img/scrum_flow.png\">\n</center>\n\nそれでは、各イベントを詳しく学んでいきましょう。\n\n### スプリントプランニング\nスプリントプランニングは各スプリントの始めに行い、これから行う作業を計画するミーティングのことです。プロダクトバックログ(要求リスト)から、スプリントバックログ(開発項目詳細)を作っていきます。\n\nスプリント計画は大きく分けて2つに分かれています。\n\nその1：スプリント内に何を開発するか（プロダクトバックログから選択）\n\n<center>\n<img src=\"img/pbacklog.png\" width=\"80%\">\n</center>\n\nプロダクトバックログから、今回のスプリントで何を完了させるか(スプリントゴール)を決めます。そのために、優先順位が必要になるので、プロダクトバックログに価値と見積もりをつけていきましょう。価値は数字が大きければ大きいほど重要度が高く、見積もりは大きいほど作業量が多くなります。\n\n数値で決定が難しいという場合は、まずは大きく高・中・低の3つで分類したあとで数値に分類する方法もあります。\nここで、価値と見積もりを適切に設定する方法の一種として、**プランニングポーカー**という方法があります。\n\n**プラニングポーカー**\n- チームメンバが1, 2, 3, 5, 8, 13といったカードを持ちプロダクトバックログの項目やタスクに対してカードを出す\n- 数字がそろった場合：適用\n- 数字が合わない場合：Max と Minの人が話し、再度全員がカードを出す\n - Maxを出した人 : 難易度・リスクを知っている\n - Minを出した人：スマートなやり方を知っている\n- さらに合わない場合はあらかじめ決めたルールに基づき決定（例：Max値を採用）\n\n\nその2：対象をどのように開発するか（スプリントバックログ：タスク切り分け）\n\nこれで今回のスプリントで何をするか決定しました。しかし、リストの中から選択できたとしても具体的に何をしたらいいかまだ決定していません。\nそこで、プロダクトバックログをより詳細に分けたスプリントバックログを作成します。これは、開発チームが中心となって行います。例えば、機能Aを実現するためにはXできるクラスが必要だとか、それを実装したらテストが必要など、洗い出していきます。\n\nここで重要になるのが、タスクがどのくらいの時間で完了するか、そして、完了の定義です。これはチーム全体で共有が必要です。\n\n<center>\n<img src=\"img/sbacklog.png\" width=\"80%\">\n</center>\n\n### 実装\nこのスプリントでやることが決まりました。では実際に実装スタートです。\n実装をすすめる上で重要になるのは、誰がどのタスクを処理しているのか。今どれくらいタスクが終わっているのか。これを把握できるようにすることです。\nここで、誰がどのタスクを処理しているのか。今どれくらいタスクが終わっているのか。これをチーム全体で把握する必要があります。それがデイリースクラムです。\n\n### デイリースクラム\n\n<center>\n<img src=\"img/taskboard.png\" width=\"80%\">\n</center>\n\n実装期間中、問題が浮上したり、認識のすれ違いが発生したりする可能性があります。\nそこで、デイリースクラムでは、毎日チームの状況を把握します。朝の朝礼のような感じです。\n\nデイリースクラムは必ず15分と決まっており、話し合う項目は以下の3つです。\n\n- 前回のデイリースクラムから行ったこと\n- 次回のデイリースクラムまでに行うこと\n- 問題点をあげる(<font color=\"red\">対策は別で行う</font>)\n\nその際に使用するのが、カンバン(タスクボード)です。カンバンは、スプリントバックログをToDo(これから取り組むこと)、Doing(今作業していること)、Done(終了タスク)に分けて見える化したもので、誰がどの項目に取り組んでいるかが一目でわかるようになっています。\n\nカンバンを使って、進捗状況や向かっている方向がずれていないか確認します。\n\n### スプリントレビュー\nスプリントレビューとは、スプリントの終わりにインクリメント（開発物）の動作確認と、必要であればプロダクトバックログの再確認を行います。具体的には、プロダクトオーナーが**何が完了し、何が完了していないか**を明確化します。その際、動作確認で重要となるのは「動作するプロダクト」です。\n\n### スプリントレトロスペクティブ\n\n\n<center>\n<img src=\"img/kpt.png\" width=\"80%\">\n</center>\n\nスプリントレトロスペクティブでは次のスプリントの改善計画を立てるために行うふりかえりのイベントです。\n\n特に下記のような目的があります。\n\n- 人・関係・プロセス・ツールの観点から今回のスプリントを振り返る\n- うまくいった項目や今後改善が必要な項目を整理する\n- チームの作業の改善の計画をたてる\n\nこうした話し合いを円滑に行うために、ふりかえり方法にKPTがあります。KPTは各メンバがKeep、Problem、Tryの三つの軸に沿ってふりかえりを行います。イベントにおいてProblem（タスクの遅延など）が出た場合、個人差を考慮し、チームとしてのサポート体制を改めて再検討し、改善案を出します。\n\nKPTの重要性に関しては事前学習の「チームビルディングの理論と実践 & 合意形成」の4番。\"ふり返りと分かち合い\" をご参照ください。\n\nScrumではここまで紹介した４種類のイベントを反復しつつ開発を進めて行きます。\n\n## スクラムで使えるツール\nデイリースクラムでは、カンバン(タスクボード)を紹介しました。しかし、それ以外にも進捗を見える化できるツールがいくつかあります。\n\n**A. リリースバーンダウンチャート：プロジェクト全体の進捗を見える化**\nスプリント毎のプロダクトバックログの難度の合計の見積りと実績をプロットしたもの\n\n<center>\n<img src=\"img/reversechart.png\" width=\"80%\">\n</center>\n\n**B. スプリントバーンダウンチャート：スプリントの進捗を見える化**\nスプリント毎に残りタスクの見積り時間において作業見積りと実績をプロットしたもの\n\n<center>\n<img src=\"img/sprintchart.png\" width=\"80%\">\n</center>","dir":"/camp9/pre_learning/1_scrum/","name":"2_scrum_howto.md","path":"camp9/pre_learning/1_scrum/2_scrum_howto.md","url":"/camp9/pre_learning/1_scrum/2_scrum_howto.html"},{"layout":"default","title":"例を用いたScrumの実践","content":"# 例を用いたScrumの実践\nsource: `{{ page.path }}`\n\nここでは具体的な例を用いてスクラムに重要な２種類のバックログを考えてみましょう。\n\nScrumを行うにあたり、スプリントバックログとプロダクトバックログの項目の検討は、特に重要な作業になります。したがって、プロダクトバックログとスプリントバックログの項目を決める例を示したいと思います。\n例えば飲み会の幹事になったとしましょう。\n\n<center>\n<img src=\"img/example.png\">\n</center>\n\n上の図では、飲み会を開くにはどんなことを配慮すべきかを、分解して検討しています。その次に検討点を具体化し、価値付けを行うことでプロダクトバックログの作成を行っています。このように**プロダクトバックログの作成**は要求や要件の分析・具体化をして、項目に起こす作業です。また、見積と価値づけについては、図中にあるように項目の実現の難易度と、飲み会を開くために必要な項目か否かという風に切り分けて考えます。例えば、抜きんでてお酒の品揃えのいいお店を探すのはなかなか大変ですが、「ビールさえ飲めればいい！」というならば、価値は低くなりますね。\n\nまた、プロダクトバックログで決めた各項目の優先度に応じて、各スプリントでスプリントバックログに項目のタスク切り分けをします。\n\nz\n<center>\n<img src=\"img/example2.png\">\n</center>\n\nスプリントバックログではスプリントで取り掛かる項目を、どのように実現するかを決め、リストアップします。特に、プロダクトバックログからさらに具体化し、何をしたらどのような成果が上がるかを見える化します。またタスクの切り分けの際はどの程度の時間がかかるかを見積もります。\nこのように、最初は抽象度の高いところから徐々に具体化していき、最後は作業に結びつけていきます。\n\nしかし、スプリントを回している最中に参加するメンバーから「次の日の関係から飲み会の場所を〇〇付近にしてほしい！」と言った話が出てきて...〇〇付近には決定したジャンルの店がない... といった問題が浮上するかもしれません。その際はどうしましょう？ジャンルを変更する？参加を断念してもらう？\n\n2章でも述べましたが、スクラムは経験が重要になってきます。チームによって重要な事柄、タスクの切り分け方はそれぞれです。その時のベストを見つける必要があります。\n\n\n「みんなでScrum!」の事前学習はこれで終わりです。\n\n知識も必要だけど実践してみないとわからないということがわかったと思います。これを元に当日実践を通じて学んで行きましょう！\n","dir":"/camp9/pre_learning/1_scrum/","name":"3_scrum_example.md","path":"camp9/pre_learning/1_scrum/3_scrum_example.md","url":"/camp9/pre_learning/1_scrum/3_scrum_example.html"},{"permalink":"/camp9/pre_learning/1_scrum/","layout":"default","title":"みんなでScrum","content":"# みんなでScrum\nsource: `{{ page.path }}`","dir":"/camp9/pre_learning/1_scrum/","name":"README.md","path":"camp9/pre_learning/1_scrum/README.md","url":"/camp9/pre_learning/1_scrum/"},{"permalink":"/camp9/pre_learning/2_mdd_theory/","layout":"default","title":"モデル駆動開発 理論編","content":"# モデル駆動開発 理論編\nsource: `{{ page.path }}`\n","dir":"/camp9/pre_learning/2_mdd_theory/","name":"README.md","path":"camp9/pre_learning/2_mdd_theory/README.md","url":"/camp9/pre_learning/2_mdd_theory/"},{"layout":"default","title":"MDDチュートリアル概要","content":"# MDDチュートリアル概要\nsource: `{{ page.path }}`\n\n 当日のモデル駆動開発（MDD）演習では、モデリングツールである astah* professionalを使用しUMLのクラス図やステートマシン図を作成して開発を進めます。そこで事前実習としてMDDチュートリアルでは、astah* professionalやm2tプラグインの簡単な使い方を覚え、MDDが行えるようになるために小規模な開発を行い、実行します。m2tは、クラス図、ステートマシン図の2つのモデル図からソースコードを生成するプラグインです。\n\n<center>\n<img src=\"../1_scrum/img/img7-1.png\" width=\"80%\"></img>\n図：クラス図とモデル図の例\n</center>","dir":"/camp9/pre_learning/3_mdd_practice/","name":"0_mddprac_tutorial.md","path":"camp9/pre_learning/3_mdd_practice/0_mddprac_tutorial.md","url":"/camp9/pre_learning/3_mdd_practice/0_mddprac_tutorial.html"},{"layout":"default","title":"Pretank","content":"# Pretank\nsource: `{{ page.path }}`\n\n当日の実習では、キャタピラを制御し移動するロボットのLEDTankを使用します。しかし、事前実習の段階では皆様のお手元にはLEDTankがありません。今回の事前実習ではMDDによるコード生成を学ぶという点から、PC上で簡易的に動く、PreTankを用いて事前実習を行います。\n\nPreTankは、左右輪の出力を指定するとキャタピラが回転して走行します。その走行の状況をコンソールに出力します。\n\nまた、事前実習ではまだ何も搭載されていませんが、移動体の先端にはセンサーを取り付けることができ、その情報を読み取り動作を変更することができます。\n\n事前実習ではこのPreTankを題材にしてソフトウェアを開発します。\n作成するソフトウェアは、「100cm前進→90deg右旋回→100cm前進→90deg右旋回→100cm前進→・・・」とシンプルなものです。\n\n次の章から実際に手を動かしていきましょう！\n\n\n<div style=\"border: 1px solid; margin: 1em; padding: .75em .75em 0 .75em; background-color: rgba(31, 231, 31, 0.2);\">\n<p style=\"text-align: center\"><b>～ 初めてのLEDTank開発・・・ ～</b></p>\n<p style=\"text-align: left\">地震、大雨、強風、大雪、津波、原子力発電所の事故・・・災害はある日突然訪れ、人々を危機に陥れます。それを救うための災害救助を行う人々も同時に危機にさらされています。そこで弊社では、災害救助のためのロボットLEDTankの開発に着手しました。足場の悪い道もキャタピラで走破し、付属のセンサで周囲の状況を把握しながら、人々を救う未来のロボットです。</p><p style=\"text-align: left\">災害の状況をAIが即座に判断し、適切な救助活動を・・・と映画のようにいけばよいのですが、まだまだAIだけで柔軟に救助活動を行うのは困難です。そこで、状況に応じたソフトウェアを即座に作る必要があります。LEDTankのソフトウェア開発では、モデル駆動開発という新しい開発手法を用いて、効率的な開発をすることで、状況に応じたソフトウェアを即座に作成できます。</p><p style=\"text-align: left\">これにより、いかなる災害の時にも柔軟に、即座に対応ができるLEDTankを災害救助者に提供でき、人々を安全に救うことができるのです。</p>\n</div>","dir":"/camp9/pre_learning/3_mdd_practice/","name":"1_mddprac_pretank.md","path":"camp9/pre_learning/3_mdd_practice/1_mddprac_pretank.md","url":"/camp9/pre_learning/3_mdd_practice/1_mddprac_pretank.html"},{"layout":"default","title":"プロジェクトファイルを作成しよう","content":"# プロジェクトファイルを作成しよう\n\nsource: `{{ page.path }}`\n\nこれよりastahを使用して作業を進めますが。実行環境は「開発環境構築」の章に従いWindows10を使用します。\n\nまず、プロジェクトファイルを作成します。astah を起動して、メニューより「ファイル」→「プロジェクトの新規作成」を選択し、プロジェクトファイルを作成します。\n\nプロジェクトの作成したら、一度、空の状態で保存してください。\nプロジェクトの保存は「ファイル」→「プロジェクトの保存」を選択します。任意のフォルダに保存をしてください。\n\n次の章よりクラス図を作っていきましょう！\n\n<center>\n<img src=\"../1_scrum/img/pic2.png\" width=\"80%\"></img>\n図：クラス図とモデル図の例\n</center>","dir":"/camp9/pre_learning/3_mdd_practice/","name":"2_mddprac_makeprjfile.md","path":"camp9/pre_learning/3_mdd_practice/2_mddprac_makeprjfile.md","url":"/camp9/pre_learning/3_mdd_practice/2_mddprac_makeprjfile.html"},{"layout":"default","title":"クラス図を作ってみよう","content":"# クラス図を作ってみよう\n\nsource: `{{ page.path }}`\n\n前章でプロジェクトを作って準備が整ったので、ここから本番です！\n\n4.1. クラス図の追加\nメニューより「図」→「クラス図」を選択し、クラス図を作るためのキャンバスを作成します。\n\n4.2 クラスの追加\nクラス図を作るためのキャンバスを作成したら、クラスを追加してクラス図を作成します。\n\n① クラスを選択します。\n② キャンバスをクリックしてクラスを配置します。\n③ 「クラス0」と書かれている部分をクリックするとクラス名を自由に変更できます。ここでは 「LEDTank」とします。\n\n4.3. ライブラリの追加\n次に、ライブラリを追加します。今回の事前実習で記述するのはLEDTankのモデルです。これは、LEDTankのアプリケーション部分を司る部分となります。\n\n実際のアクチュエータの駆動や、センサ情報の取得などの動作は実行委員の用意したControllerが行います。Controllerはすでにコードが存在するため、コード生成を行う必要はありません。そこで、ライブラリであることを表すステレオタイプ<<lib>>を指定する必要があります。<<lib>>が指定されたクラスは、コード生成時にコード生成されません。\n\n① 先ほど「LEDTank」クラスを追加した手順と同じように、「Controller」クラスをクラス図に配置します。\n② 次にステレオタイプを追加します。先ほど作成した「Controller」クラスを選択します。\n③ 左側のビューのステレオタイプを選択します。\n④ 追加をクリックします。\n⑤ 「lib」と入力します。\n\n\n図のように、「Controller」クラスの名前の上に「<<lib>>」と表示がされればステレオタイプの設定は終わりです。\n\n\n\n\n4.4. 関連の追加\nクラス図における「関連」とは、そのクラス間で参照があるかどうかを表します。ここでは「LEDTank」クラスは「Controller」クラスを参照し、「Controller」クラスに定義されている関数や変数を用いて制御を行います。つまり、「LEDTank」クラスの中で「Controller」クラスのインスタンスを生成し「LEDTank」はこれを用いてセンサやアクチュエータの制御を行います。\n\n① 関連を選択します。\n② 「LEDTank」と「Controller」を接続します。\n\n\n\n4.5. 変数の追加\nLEDTankは進んだ距離と、旋回した角度の情報を元にどのような動作状態となるかを決定します。\nそのため、LEDTankクラスにdistance（距離）と、angle（旋回角度）の2つを追加します。\n\n① LEDTankクラスにdistanceのメンバ変数を追加します。LEDTankクラスの黄色のひし形をクリックします。\n② 左のビューに追加するメンバ変数の名前を設定できるので distanceとします。distanceはfloat型とします。\n\n\n\n同様に、以下の図のようにangleも追加します。型はfloatです。\n\n\n次の章よりステートマシン図を書いていきます！","dir":"/camp9/pre_learning/3_mdd_practice/","name":"3_mddprac_makeclass.md","path":"camp9/pre_learning/3_mdd_practice/3_mddprac_makeclass.md","url":"/camp9/pre_learning/3_mdd_practice/3_mddprac_makeclass.html"},{"layout":"default","title":null,"content":"","dir":"/camp9/pre_learning/3_mdd_practice/","name":"4_mddprac_makefsm.md","path":"camp9/pre_learning/3_mdd_practice/4_mddprac_makefsm.md","url":"/camp9/pre_learning/3_mdd_practice/4_mddprac_makefsm.html"},{"layout":"default","title":null,"content":"","dir":"/camp9/pre_learning/3_mdd_practice/","name":"5_mddprac_generatecode.md","path":"camp9/pre_learning/3_mdd_practice/5_mddprac_generatecode.md","url":"/camp9/pre_learning/3_mdd_practice/5_mddprac_generatecode.html"},{"layout":"default","title":null,"content":"","dir":"/camp9/pre_learning/3_mdd_practice/","name":"6_mddprac_execute.md","path":"camp9/pre_learning/3_mdd_practice/6_mddprac_execute.md","url":"/camp9/pre_learning/3_mdd_practice/6_mddprac_execute.html"},{"layout":"default","title":null,"content":"","dir":"/camp9/pre_learning/3_mdd_practice/","name":"7_mddprac_revise.md","path":"camp9/pre_learning/3_mdd_practice/7_mddprac_revise.md","url":"/camp9/pre_learning/3_mdd_practice/7_mddprac_revise.html"},{"layout":"default","title":null,"content":"","dir":"/camp9/pre_learning/3_mdd_practice/","name":"8_mddprac_finally.md","path":"camp9/pre_learning/3_mdd_practice/8_mddprac_finally.md","url":"/camp9/pre_learning/3_mdd_practice/8_mddprac_finally.html"},{"layout":"default","title":null,"content":"","dir":"/camp9/pre_learning/3_mdd_practice/","name":"9_mddprac_exercises.md","path":"camp9/pre_learning/3_mdd_practice/9_mddprac_exercises.md","url":"/camp9/pre_learning/3_mdd_practice/9_mddprac_exercises.html"},{"permalink":"/camp9/pre_learning/3_mdd_practice/","layout":"default","title":"モデル駆動開発 演習編","content":"# モデル駆動開発 演習編\nsource: `{{ page.path }}`\n\n0_mddprac_tutorial.md 1_mddprac_pretank.md 2_mddprac_makeprjfile.md 3_mddprac_makeclass.md 4_mddprac_makefsm.md 5_mddprac_generatecode.md 6_mddprac_execute.md 7_mddprac_revise.md 8_mddprac_finally.md 9_mddprac_exercises.md ","dir":"/camp9/pre_learning/3_mdd_practice/","name":"README.md","path":"camp9/pre_learning/3_mdd_practice/README.md","url":"/camp9/pre_learning/3_mdd_practice/"},{"permalink":"/camp9/pre_learning/","layout":"default","title":"事前学習一覧","content":"# 事前学習一覧\nsource: `{{ page.path }}`\n\n## チームビルディングの理論と実践&合意形成\n1. [はじめに](/camp9/pre_learning/0_teambuilding/0_team_intro.html)\n2. [自己紹介ワーク](/camp9/pre_learning/0_teambuilding/1_team_introwork.html)\n3. [「ふりかえり」と「分かち合い」](/camp9/pre_learning/0_teambuilding/2_team_review.html)\n4. [チーム](/camp9/pre_learning/0_teambuilding/3_team_whatsteam.html)\n5. [ミッションとルール](/camp9/pre_learning/0_teambuilding/4_team_mission.html)\n6. [合意形成](/camp9/pre_learning/0_teambuilding/5_team_consensus.html)\n7. [おわりに](/camp9/pre_learning/0_teambuilding/6_team_conclude.html)\n\n## みんなでScrum!\n1. [はじめに](/camp9/pre_learning/1_scrum/0_scrum_intro.html)\n2. [Scrumとは](/camp9/pre_learning/1_scrum/1_scrum_overview.html)\n3. [Scrumを用いたチーム開発](/camp9/pre_learning/1_scrum/2_scrum_howto.html)\n4. [例を用いたScrumの実践](/camp9/pre_learning/1_scrum/3_scrum_example.html)\n","dir":"/camp9/pre_learning/","name":"README.md","path":"camp9/pre_learning/README.md","url":"/camp9/pre_learning/"}]